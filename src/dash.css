body {
    background-color: #FAFAFF;
}

.hidden_BD {
    overflow: hidden;
}

.LoadBd {
    position: relative;
    height: 100vh;
}


/**===== Loader=====*/
.contenedor_Load {
    position: absolute;
    z-index: 1;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.contenedor_Load .preloader {
    animation: rotate 2.3s cubic-bezier(0.75, 0, 0.5, 1) infinite;
}

@keyframes rotate {
    50% {
        transform: rotate(360deg);
    }

    100% {
        transform: rotate(720deg);
    }
}

.preloader span {
    position: absolute;
    z-index: 1;
    display: block;
    height: 64px;
    width: 64px;
    background: #8231D0;
    border: 1px solid #8231D0;
    border-radius: 100%;
}

.preloader span:nth-child(1) {
    transform: translate(-28px, -28px);
    animation: shape_1 2.3s cubic-bezier(0.75, 0, 0.5, 1) infinite;
}

@keyframes shape_1 {
    60% {
        transform: scale(0.4);
    }
}

.preloader span:nth-child(2) {
    transform: translate(28px, -28px);
    animation: shape_2 2.3s cubic-bezier(0.75, 0, 0.5, 1) infinite;
}

@keyframes shape_2 {
    40% {
        transform: scale(0.4);
    }
}

.preloader span:nth-child(3) {
    position: relative;
    border-radius: 0px;
    transform: scale(0.98) rotate(-45deg);
    animation: shape_3 2.3s cubic-bezier(0.75, 0, 0.5, 1) infinite;
}

@keyframes shape_3 {
    50% {
        border-radius: 100%;
        transform: scale(0.5) rotate(-45deg);
    }

    100% {
        transform: scale(0.98) rotate(-45deg);
    }
}

.shadow {
    position: relative;
    top: 30px;
    left: 50%;
    transform: translateX(-50%);
    display: block;
    height: 16px;
    width: 64px;
    border-radius: 50%;
    background-color: #d9d9d9;
    border: 1px solid #d9d9d9;
    animation: shadow 2.3s cubic-bezier(0.75, 0, 0.5, 1) infinite;
}

@keyframes shadow {
    50% {
        transform: translateX(-50%) scale(0.5);
        border-color: #f2f2f2;
    }
}


#movePage {
    display: flex;
    /* considerable whitespace surrounding the navigation's items */
    padding: 2rem 3.15rem;
    border-radius: 0 0 30px 30px;
    position: fixed;
    bottom: 0px;
    right: 33%;
}

/* remove default style and slightly separate the anchor links from one another */
a {
    color: #8231D0;
    text-decoration: none;
    margin: 0 0.2rem;
    /* display the svg icon and span elements side by side, vertically aligned */
    display: flex;
    align-items: center;
    /* include padding for the background applied on the active item */
    padding: 0.75rem 1.25rem;
    border-radius: 30px;
    /* position relative for the pseudo element */
    position: relative;
    /* custom properties for the colors picked up by the elements when clicked (and updated for each link in the script) */
    --hover-bg: #5b37b720;
    --hover-c: #5b37b7;
}

/* include considerable negative margin to have the svg icon overlapping with the span element */
a svg {
    margin-right: -2.5rem;
    width: 28px;
    height: 28px;
    pointer-events: none;
    /* transition for the change in margin */
    transition: margin 0.2s ease-out;
}

/* by default hide the span element */
a span {
    opacity: 0;
    visibility: hidden;
    font-size: 0.9rem;
    margin-left: 0.9rem;
}

/* include with a pseudo element relative to the anchor link a circle, with a fixed with and height */
a:before {
    position: absolute;
    content: "";
    top: 50%;
    left: 0;
    width: 70px;
    height: 70px;
    border-radius: 50%;
    /* positioned to the left of the anchor link and scaled to 0 */
    transform: translate(0%, -50%) scale(0);
    visibility: visible;
    opacity: 1;
}

/* when active */
/* specify the colors dictated by the custom properties */
a.active {
    background: var(--hover-bg);
    color: var(--hover-c);
}

/* using the color specified by the then updated custom property show the circle of the pseudo element increasing its size and highlighting it momentarily */
a.active:before {
    background: var(--hover-c);
    opacity: 0;
    visibility: hidden;
    transform: translate(0%, -50%) scale(2);
    /* transition only when the class is applied */
    transition: all 0.4s ease-out;
}

/* remove the margin applied to the svg to make it overlay atop the anchor link */
a.active svg {
    margin-right: 0;
}

/* show the span element */
a.active span {
    visibility: visible;
    opacity: 1;
    transition: all 0.2s ease-out;
}

/* on smaller viewports show the navigation bar on the side, attached to the left of the screen */
.cambiado {
    flex-direction: column;
    justify-self: start;
    border-radius: 0 30px 30px 0;
    padding: 2rem 1.15rem 2rem 0.75rem;
    margin-right: -16%;
    float: right;
    top: 27%;
}

/* change the margin separating the anchor link elements now dividing the elements vertically */
.cambiado a {
    margin: 0.5rem 0;
}

/* remove the negative margin from the svg elements, as the width is to be taken in full */
.cambiado svg {
    margin: 0;
}